<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <link
      rel="stylesheet"
      href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.12.1/css/all.min.css"
      integrity="sha256-mmgLkCYLUQbXn0B1SRqzHar6dCnv9oZFPEC1g1cwlkk="
      crossorigin="anonymous"
    />
    <link rel="stylesheet" href="/css/style.css" />
    <title>ChatCord App</title>
  </head>

  <body>
    <div id="user_name" style="display: none"><%=user.username%></div>
    <div id="room_name" style="display: none"><%=room%></div>
    <div class="chat-container">
      <header class="chat-header">
        <h1><i class="fas fa-sms"></i> Live Chatting</h1>
        <a id="leave-btn" class="btn">Leave Chat</a>
      </header>
      <div class="chat-messages" style="height:60vh">
      </div>
      <div class="chat-form-container">
        <form id="chat-form">
          <input
            id="msg"
            type="text"
            placeholder="Enter Message"
            required
            autocomplete="off"
          />
          <button class="btn"><i class="fas fa-paper-plane"></i> Send</button>
        </form>
      </div>
    </div>

    <script src="/socket.io/socket.io.js"></script>
    <script>
      var socket = io();
      var username = document.getElementById("user_name").innerText;
      var room = document.getElementById("room_name").innerText;
      const chatForm = document.getElementById("chat-form");
      const chatMessages = document.querySelector(".chat-messages");
      const roomName = document.getElementById("room-name");
      const userList = document.getElementById("users");

      socket.emit("joinRoom", {username,room});

      // Message from server
      socket.on("message", (message) => {
        console.log(message);
        outputMessage(message);

        // Scroll down
        chatMessages.scrollTop = chatMessages.scrollHeight;
      });

      // Message submit
      chatForm.addEventListener("submit", (e) => {
        e.preventDefault();

        // Get message text
        let msg = e.target.elements.msg.value;

        msg = msg.trim();

        if (!msg) {
          return false;
        }

        // Emit message to server
        socket.emit("chatMessage", msg);

        // Clear input
        e.target.elements.msg.value = "";
        e.target.elements.msg.focus();
      });

      // Output message to DOM
      function outputMessage(message) {
        const div = document.createElement("div");
        div.classList.add("message");
        const p = document.createElement("p");
        p.classList.add("meta");
        p.innerText = message.username;
        p.innerHTML += `<span>${message.time}</span>`;
        div.appendChild(p);
        const para = document.createElement("p");
        para.classList.add("text");
        para.innerText = message.text;
        div.appendChild(para);
        document.querySelector(".chat-messages").appendChild(div);
      }

      // Add room name to DOM
      function outputRoomName(room) {
        roomName.innerText = room;
      }

      // Add users to DOM
      function outputUsers(users) {
        userList.innerHTML = "";
        users.forEach((user) => {
          const li = document.createElement("li");
          li.innerText = user.username;
          userList.appendChild(li);
        });
      }

      //Prompt the user before leave chat room
      document.getElementById("leave-btn").addEventListener("click", () => {
        const leaveRoom = confirm(
          "Are you sure you want to leave the chatroom?"
        );
        if (leaveRoom) {
          window.location.href = "/";
        } else {
        }
      });
    </script>
  </body>
</html>
